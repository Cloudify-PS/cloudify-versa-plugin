tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/tosca-vcloud-plugin/master/plugin.yaml
  - https://raw.githubusercontent.com/Cloudify-PS/cloudify-versa-plugin/dhcp/plugin.yaml

inputs:
    versa_url:
        default: "https://172.19.0.210:9183"
    client_id:
        default: "voae_rest"
    client_secret:
        default: "asrevnet_123"
    username:
        default: "Administrator"
    password:
        default: "versa123"
    appliance_name:
        default: vcpe1tdcappliance
    hq_org_name:
        default: hq_org
    interface_name:
        default: vni-0/4
    network_name:
        default: testnet
    dhcp_options_profile_name:
        default: tdc_dhcp_options
    dhcp_lease_profile_name:
        default: tdc_dhcp_lease
    dhcp_pool_name:
        default: test_dhcp_pool
    nat_pool_name:
        default: test_nat_pool
    nat_rule_name:
        default: test_nat_rule
    range_low:
        default: 87.53.87.17
    range_high:
        default: 87.53.87.19
    nat_rule_source_address:
        default: 10.14.0.0/24
    routing_name:
        default: parent_router
    parent_org_name:
        default: vcpe1_parent_org

node_templates:
  #####################
  # Versa config
  #####################
  versa_configuration:
    type: cloudify.versa.nodes.versa_configuration
    properties:
      versa_config:
        username: { get_input: username }
        password: { get_input: password }
        versa_url: { get_input: versa_url}
        client_id: { get_input: client_id}
        client_secret: { get_input: client_secret}

  interface:
    type: cloudify.versa.nodes.Interface
    properties:
      versa_config: { get_property: [versa_configuration, versa_config] }
      appliance_name: { get_input: appliance_name }
      name: { get_input: interface_name }
      units:
        - name: 0
          address: 10.14.0.2
          mask: 255.255.255.0

  network:
    type: cloudify.versa.nodes.Network
    properties:
      versa_config: { get_property: [versa_configuration, versa_config] }
      appliance_name: { get_input: appliance_name }
      name: { get_input: network_name }
      org_name: { get_input: hq_org_name }
      interface: { get_input: interface_name }
      unit: 0
      zone: trust
      router: hq_router
    relationships:
      - type: cloudify.relationships.connected_to
        target: interface

  dhcp_pool:
    type: cloudify.versa.nodes.DHCPPool
    properties:
      versa_config: { get_property: [versa_configuration, versa_config] }
      appliance_name: { get_input: appliance_name }
      org_name: { get_input: hq_org_name }
      lease_profile: { get_input: dhcp_lease_profile_name }
      options_profile: { get_input: dhcp_options_profile_name }
      name: { get_input: dhcp_pool_name }
      mask: 255.255.255.0
      range_name: test_range
      begin_address: 10.14.0.30
      end_address: 10.14.0.40
    relationships:
      - type: cloudify.relationships.depends_on
        target: network

  dhcp_server:
    type: cloudify.versa.nodes.DHCPServer
    properties:
      versa_config: { get_property: [versa_configuration, versa_config] }
      appliance_name: { get_input: appliance_name }
      org_name: { get_input: hq_org_name }
      lease_profile: { get_input: dhcp_lease_profile_name }
      options_profile: { get_input: dhcp_options_profile_name }
      pool_name: { get_input: dhcp_pool_name }
      name: test_dhcp_server
      networks:
        - { get_input: network_name }
    relationships:
      - type: cloudify.versa.dhcp_connected_to_profile
        target: dhcp_pool

  nat:
    type: cloudify.versa.nodes.CGNat
    properties:
      versa_config: { get_property: [versa_configuration, versa_config] }
      appliance_name: { get_input: appliance_name }
      org_name: { get_input: hq_org_name }
      pool:
        name: { get_input: nat_pool_name }
        ranges:
          - name: nat_range_name
            low: { get_input: range_low }
            hight: { get_input: range_high }
        routing_instance: { get_input: routing_name }
        provider_org: { get_input: parent_org_name }
      rule:
        name: { get_input: nat_rule_name }
        addresses:
          - { get_input: nat_rule_source_address }
    relationships:
      - type: cloudify.versa.cgnat_connected_to_org
        target: dhcp_server
