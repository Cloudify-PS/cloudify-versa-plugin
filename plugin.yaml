plugins:
  versa:
    executor: central_deployment_agent
    source: http://github.com/Cloudify-PS/cloudify-versa-plugin/archive/master.zip
    package_name: cloudify-versa-plugin
    package_version: '1.0'

node_types:

  cloudify.versa.nodes.versa_configuration:
    derived_from: cloudify.nodes.Root
    properties:
      versa_config:
        required: true

  cloudify.versa.nodes.ResourcePool:
    derived_from: cloudify.nodes.Root
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      instance:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_resource_pool
          inputs: 
            instance: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_resource_pool
          inputs:
            instance: {}

  cloudify.versa.nodes.CMSLocalOrganization:
    derived_from: cloudify.nodes.Root
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      organization:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_cms_local_organization
          inputs: 
            organization: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_cms_local_organization
          inputs: 
            organization: {}

  cloudify.versa.nodes.Organization:
    derived_from: cloudify.nodes.Root
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      organization:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_organization
          inputs: 
            organization: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_organization
          inputs: 
            organization: {}

  cloudify.versa.nodes.Appliance:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      device:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_appliance
          inputs:
            device: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_appliance
          inputs:
            device: {}

  cloudify.versa.nodes.AssociatedOrganization:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.associate_organization
          inputs: 
            organization: {}

  cloudify.versa.nodes.Router:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      router:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_router
          inputs: 
            router: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_router
          inputs: 
            router: {}

  cloudify.versa.nodes.RouterUpdate:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      router:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.insert_to_router
          inputs: 
            router: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_from_router
          inputs: 
            router: {}

  cloudify.versa.nodes.CGNatPool:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      pool:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_cgnat_pool
          inputs: 
            pool: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_cgnat_pool
          inputs: 
            pool: {}

  cloudify.versa.nodes.CGNatRule:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      rule:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_cgnat_rule
          inputs: 
            rule: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_cgnat_rule
          inputs: 
            rule: {}

  cloudify.versa.nodes.Zone:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      zone:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_zone
          inputs: 
            zone: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_zone
          inputs:
            zone: {}

  cloudify.versa.nodes.ZoneUpdate:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      zone:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.insert_to_zone
          inputs:
            zone: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_from_zone
          inputs:
            zone: {}

  cloudify.versa.nodes.NGFirewallUrlFilter:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      filters:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_url_filters
          inputs: 
            filters: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_url_filters
          inputs:
            filters: {}

  cloudify.versa.nodes.NGFirewallPolicy:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      policy:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_firewall_policy
          inputs: 
            policy:  {}
        delete:
          implementation: versa.versa_plugin.operations.delete_firewall_policy
          inputs:
            policy:  {}

  cloudify.versa.nodes.NGFirewallRule:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      policy_name:
        required: true
      on_top:
        default: false
      rule:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_firewall_rule
          inputs:
            rule: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_firewall_rule
          inputs:
            rule: {}
      versa.interfaces.actions:
        update:
          implementation: versa.versa_plugin.operations.update_firewall_rule
          inputs:
            rule: {}
        get:
          implementation: versa.versa_plugin.operations.get_firewall_rule
          inputs:
            name: {}


  cloudify.versa.nodes.DHCPProfile:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      profile:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_dhcp_profile
          inputs:
            profile: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_dhcp_profile
          inputs: 
            profile: {}

  cloudify.versa.nodes.DHCPOptionsProfile:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      options-profile:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_dhcp_options_profile
          inputs: 
            options-profile: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_dhcp_options_profile
          inputs: 
            options-profile: {}

  cloudify.versa.nodes.DHCPLeaseProfile:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      lease_profile:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_dhcp_lease_profile
          inputs: 
            lease_profile: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_dhcp_lease_profile
          inputs: 
            lease_profile: {}

  cloudify.versa.nodes.DHCPGlobalConfiguration:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      server-and-relay:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_dhcp_global_configuration
          inputs: 
            server-and-relay: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_dhcp_global_configuration
          inputs: 
            server-and-relay: {}

  cloudify.versa.nodes.DHCPPool:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      pool:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_dhcp_pool
          inputs: 
            pool: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_dhcp_pool
          inputs:
            pool: {}

  cloudify.versa.nodes.DHCPServer:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      organization:
        required: true
      lease_profile:
        required: true
      options_profile:
        required: true
      pool_name:
        default: {}
      name:
        default: {}
      networks:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_dhcp_server
          inputs: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_dhcp_server
          inputs: {}

  cloudify.versa.nodes.Network:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance:
        required: true
      network:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_network
          inputs: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_network
          inputs: {}

  cloudify.versa.nodes.Interface:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance: 
        required: true
      interface:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_interface
          inputs: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_interface
          inputs: {}

  cloudify.versa.nodes.Limits:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance: 
        required: true
      organization: 
        required: true
      dhcp_profile:
        default: {}
      routes:
        default: {}
      networks:
        default: {}
      interfaces:
        default: {}
      provider_orgs:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.insert_to_limits
          inputs: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_from_limits
          inputs: {}

  cloudify.versa.nodes.VPNProfile:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        required: true
      appliance: 
        required: true
      organization: 
        required: true
      profile:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.create_vpn_profile
          inputs:
            profile: {}
        delete:
          implementation: versa.versa_plugin.operations.delete_vpn_profile
          inputs:
            profile: {}

  cloudify.versa.nodes.CaptivePortal:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      use_existing:
        default: false
      versa_config:
        default: {}
      appliance_name:
        default: ""
      org_name:
        default: ""
      captive_portal:
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: versa.versa_plugin.operations.insert_captive_portal
          inputs: {}
        delete:
          implementation: versa.versa_plugin.operations.clean_captove_portal
          inputs: {}

